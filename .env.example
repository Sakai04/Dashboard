# Environment Variables Template
# Copy this file to .env and fill in your actual values

# ============================================================================
# GitHub Settings
# ============================================================================

# GitHub Personal Access Token
# Required permissions: repo, admin:repo_hook
# Get from: https://github.com/settings/tokens
GITHUB_TOKEN=ghp_your_github_personal_access_token_here

# GitHub Webhook Secret (for security)
# Generate with: openssl rand -hex 20
# Must match the secret set in GitHub webhook configuration
GITHUB_WEBHOOK_SECRET=your_secure_webhook_secret_here

# ============================================================================
# Notion Settings  
# ============================================================================

# Notion Integration Token
# Get from: https://developers.notion.com/
# Format: secret_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
NOTION_TOKEN=secret_your_notion_integration_token_here

# Notion Database ID
# Extract from database URL: https://notion.so/workspace/DATABASE_ID?v=...
# 32-character alphanumeric ID
NOTION_DATABASE_ID=your_notion_database_id_here

# ============================================================================
# OpenAI Settings (Optional - for AI-powered analysis)
# ============================================================================

# OpenAI API Key
# Get from: https://platform.openai.com/api-keys
# Required for enhanced commit analysis with AI insights
OPENAI_API_KEY=sk-your_openai_api_key_here

# OpenAI Model (optional, defaults to gpt-3.5-turbo)
OPENAI_MODEL=gpt-3.5-turbo

# ============================================================================
# MCP Server Settings
# ============================================================================

# MCP Server Host (usually 0.0.0.0 for Docker, localhost for local)
MCP_SERVER_HOST=0.0.0.0

# MCP Server Port
MCP_SERVER_PORT=8001

# MCP Server Environment (development, production)
MCP_SERVER_ENV=production

# Enable/disable AI analysis (true/false)
MCP_AI_ANALYSIS_ENABLED=true

# ============================================================================
# n8n Settings
# ============================================================================

# n8n Host
N8N_HOST=localhost

# n8n Port
N8N_PORT=5678

# n8n Webhook Base URL (for generating webhook URLs)
# Example: https://your-domain.com or http://localhost:5678
N8N_WEBHOOK_URL=http://localhost:5678

# n8n Encryption Key (generate with: openssl rand -base64 32)
N8N_ENCRYPTION_KEY=your_32_character_encryption_key_here

# ============================================================================
# Database Settings (for the main FastAPI app)
# ============================================================================

# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://postgres:password@db:5432/dashboard

# Database connection pool settings
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# ============================================================================
# Notification Settings (Optional)
# ============================================================================

# Slack Webhook URL (for error notifications)
# Get from: https://api.slack.com/incoming-webhooks
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# Email settings (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_app_password
NOTIFICATION_EMAIL=admin@yourdomain.com

# ============================================================================
# Security Settings
# ============================================================================

# JWT Secret Key for API authentication (generate with: openssl rand -hex 32)
JWT_SECRET_KEY=your_jwt_secret_key_here

# JWT Algorithm
JWT_ALGORITHM=HS256

# JWT Token Expiration (in minutes)
JWT_EXPIRATION_MINUTES=1440

# API Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# ============================================================================
# Logging Settings
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional, logs to console if not set)
LOG_FILE=logs/app.log

# Enable structured logging (true/false)
STRUCTURED_LOGGING=true

# ============================================================================
# Docker Compose Settings
# ============================================================================

# PostgreSQL Database Settings
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_secure_postgres_password
POSTGRES_DB=dashboard

# PgAdmin Settings
PGADMIN_DEFAULT_EMAIL=admin@yourdomain.com
PGADMIN_DEFAULT_PASSWORD=your_pgadmin_password

# ============================================================================
# Development Settings
# ============================================================================

# Enable debug mode (true/false)
DEBUG=false

# Enable auto-reload for development (true/false)
AUTO_RELOAD=false

# Enable CORS for development (true/false)
CORS_ENABLED=true

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ============================================================================
# Performance Settings
# ============================================================================

# Cache settings
CACHE_ENABLED=true
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE=1000

# Request timeout (seconds)
REQUEST_TIMEOUT=30

# Worker processes (for production)
WORKER_PROCESSES=1

# ============================================================================
# Feature Flags
# ============================================================================

# Enable/disable specific features
FEATURE_AI_ANALYSIS=true
FEATURE_SLACK_NOTIFICATIONS=true
FEATURE_EMAIL_NOTIFICATIONS=false
FEATURE_METRICS_COLLECTION=true
FEATURE_WEBHOOK_VALIDATION=true

# ============================================================================
# Monitoring & Analytics (Optional)
# ============================================================================

# Prometheus metrics endpoint
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# Application insights or similar
APP_INSIGHTS_KEY=your_app_insights_key_here

# ============================================================================
# Instructions
# ============================================================================

# 1. Copy this file to .env in the project root
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit the .env file to version control
# 4. Use strong, unique passwords and secrets
# 5. Regularly rotate API keys and tokens
# 6. Test the configuration with the provided health check endpoints

# ============================================================================
# Example Commands for Generating Secrets
# ============================================================================

# Generate webhook secret:
# openssl rand -hex 20

# Generate JWT secret:  
# openssl rand -hex 32

# Generate encryption key:
# openssl rand -base64 32

# ============================================================================
# Health Check URLs (after deployment)
# ============================================================================

# MCP Server: http://localhost:8001/
# FastAPI App: http://localhost:8000/
# n8n: http://localhost:5678/
# PostgreSQL: Check with docker-compose logs db